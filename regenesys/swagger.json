{
  "swagger": "2.0",
  "info": {
    "description": "Payment API Documentation",
    "version": "1.0.0",
    "title": "Payment API Documentation"
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "schemes": [
    "http",
    "https"
  ],
  "parameters": {
    "clientId": {
      "name": "clientId",
      "type": "string",
      "in": "header",
      "required": true,
      "description": "APIs are secured by clientId."
    },
    "clientSecret": {
      "name": "clientSecret",
      "type": "string",
      "in": "header",
      "required": true,
      "description": "clientSecret"
    }
  },
  "paths": {
    "/merchant": {
      "parameters": [
        {
          "$ref": "#/parameters/clientId"
        },
        {
          "$ref": "#/parameters/clientSecret"
        }
      ],
      "post": {
        "tags": [
          "Merchant"
        ],
        "operationId": "createMerchant",
        "summary": "This API is used to create Merchant and get  clientId and clientSecret",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "parameters to withdraw tokens",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createMerchantRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/provider": {
      "parameters": [
        {
          "$ref": "#/parameters/clientId"
        },
        {
          "$ref": "#/parameters/clientSecret"
        }
      ],
      "get": {
        "tags": [
          "Provider"
        ],
        "operationId": "getProviders",
        "summary": "This API is used to get provider list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/callback/{id}": {
      "post": {
        "tags": [
          "Callback"
        ],
        "operationId": "callback",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "parameters to provider request",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Callback"
        ],
        "operationId": "callback",
        "summary": "This API is used to get provider list",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "parameters to provider request",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/merchantProviderConfig": {
      "parameters": [
        {
          "$ref": "#/parameters/clientId"
        },
        {
          "$ref": "#/parameters/clientSecret"
        }
      ],
      "post": {
        "tags": [
          "MerchantSecret"
        ],
        "operationId": "addMerchantSecret",
        "summary": "This API is used to create merchantProviderConfig",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "parameters to merchant secret",
            "required": true,
            "schema": {
              "$ref": "#/definitions/addMerchantSecret"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/collection": {
      "parameters": [
        {
          "$ref": "#/parameters/clientId"
        },
        {
          "$ref": "#/parameters/clientSecret"
        }
      ],
      "post": {
        "tags": [
          "Payment"
        ],
        "operationId": "collection",
        "summary": "This API is used to collection the Payment from user account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "parameters to collection",
            "required": true,
            "schema": {
              "$ref": "#/definitions/collectionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/payment/verify": {
      "parameters": [
        {
          "$ref": "#/parameters/clientId"
        },
        {
          "$ref": "#/parameters/clientSecret"
        }
      ],
      "post": {
        "tags": [
          "Payment"
        ],
        "operationId": "paymentVerify",
        "summary": "This API is used to verify the Payment from user account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "parameters to verifyPayment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/verifypaymentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/deposit": {
      "parameters": [
        {
          "$ref": "#/parameters/clientId"
        },
        {
          "$ref": "#/parameters/clientSecret"
        }
      ],
      "post": {
        "tags": [
          "Payment"
        ],
        "operationId": "deposit",
        "summary": "This API is used to deposit the Payment in user account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "parameters to deposit",
            "required": true,
            "schema": {
              "$ref": "#/definitions/depositRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/transaction/status": {
      "parameters": [
        {
          "$ref": "#/parameters/clientId"
        },
        {
          "$ref": "#/parameters/clientSecret"
        }
      ],
      "post": {
        "tags": [
          "Payment"
        ],
        "operationId": "getCollectionTransactionStatus",
        "summary": "This API is  get collection status",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "parameters to transaction",
            "required": true,
            "schema": {
              "$ref": "#/definitions/getTransactionStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/bulk/deposit": {
      "parameters": [
        {
          "$ref": "#/parameters/clientId"
        },
        {
          "$ref": "#/parameters/clientSecret"
        }
      ],
      "post": {
        "tags": [
          "Payment"
        ],
        "operationId": "bulkDeposit",
        "summary": "This API is used to bulk disburse the Payment in users account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "parameters to disburse",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bulkDepositRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "createMerchantRequest": {
      "required": [
        "merchantName",
        "token",
        "currency"
      ],
      "properties": {
        "merchantName": {
          "type": "string",
          "description": "merchant Name"
        },
        "currency": {
          "type": "string",
          "minLength": 1,
          "maxLength": 200,
          "description": "currency"
        },
        "token": {
          "description": "type of the token",
          "type": "string",
          "minLength": 3,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9]*$"
        }
      }
    },
    "createProviderRequest": {
      "required": [
        "providerName",
        "token",
        "currency"
      ],
      "properties": {
        "providerName": {
          "type": "string",
          "description": "provide Name"
        },
        "currency": {
          "type": "string",
          "description": "currency"
        },
        "token": {
          "description": "type of the token",
          "type": "string",
          "minLength": 3,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9]*$"
        }
      }
    },
    "addMerchantSecret": {
      "required": [
        "providerId",
        "merchantId"
      ],
      "properties": {
        "merchantId": {
          "type": "string",
          "description": "merchant name "
        },
        "providerId": {
          "description": "providerId",
          "type": "string"
        },
        "keys": {
          "description": "keys",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MerchantSecret"
          }
        }
      }
    },
    "MerchantSecret": {
      "required": [
        "value",
        "key"
      ],
      "properties": {
        "value": {
          "type": "string",
          "description": "key name"
        },
        "key": {
          "type": "string",
          "description": "key value"
        }
      }
    },
    "getTransactionStatusRequest": {
      "required": [
        "merchantId",
        "providerId",
        "transactionReferenceId"
      ],
      "properties": {
        "merchantId": {
          "type": "string",
          "minLength": 1,
          "maxLength": 200,
          "description": "Merchant Name"
        },
        "providerId": {
          "type": "string",
          "description": "providerId"
        },
        "transactionReferenceId": {
          "type": "string",
          "description": "deposit transaction reference id"
        }
      }
    },
    "collectionRequest": {
      "required": [
        "merchantId",
        "providerId",
        "payer",
        "currency",
        "amount",
        "callbackUrl"
      ],
      "properties": {
        "merchantId": {
          "type": "string",
          "minLength": 1,
          "maxLength": 200,
          "description": "Merchant Id"
        },
        "providerId": {
          "type": "string",
          "minLength": 1,
          "maxLength": 200,
          "description": "providerId"
        },
        "amount": {
          "type": "string",
          "minLength": 1,
          "description": " collection amount"
        },
        "currency": {
          "type": "string",
          "description": "currency Name"
        },
        "message": {
          "type": "string",
          "minLength": 1,
          "maxLength": 200,
          "description": "collection message"
        },
        "transactionReferenceId": {
          "type": "string",
          "description": "collection transaction reference id"
        },
        "callbackUrl": {
          "type": "string",
          "description": "callbackUrl"
        },
        "payer": {
          "description": "payer user Id",
          "type": "string"
        },
        "payerType": {
          "description": "type of user id ",
          "type": "string",
          "enum": [
            "PHONE",
            "EMAIL",
            "ID"
          ]
        }
      }
    },
    "verifypaymentRequest": {
      "required": [
        "merchantId",
        "providerId",
        "transactionCode",
        "transactionReferenceId"
      ],
      "properties": {
        "merchantId": {
          "type": "string",
          "minLength": 1,
          "maxLength": 200,
          "description": "Merchant Id"
        },
        "providerId": {
          "type": "string",
          "minLength": 1,
          "maxLength": 200,
          "description": "providerId"
        },
        "transactionCode": {
          "type": "string",
          "minLength": 1,
          "description": "request id"
        },
        "transactionReferenceId": {
          "type": "string",
          "minLength": 1,
          "description": "transaction code"
        }
      }
    },
    "bulkDepositRequest": {
      "required": [
        "merchantId",
        "providerId",
        "users"
      ],
      "properties": {
        "merchantId": {
          "type": "string",
          "minLength": 1,
          "maxLength": 200,
          "description": "Merchant Name"
        },
        "amount": {
          "type": "string",
          "minLength": 1,
          "description": " transfer amount"
        },
        "currency": {
          "type": "string",
          "description": "currency Name"
        },
        "message": {
          "type": "string",
          "minLength": 1,
          "maxLength": 200,
          "description": "transfer message"
        },
        "transactionReferenceId": {
          "type": "string",
          "description": "transfer transaction reference id"
        },
        "providerId": {
          "type": "string",
          "description": "providerId"
        },
        "users": {
          "description": "users",
          "type": "array",
          "items": {
            "$ref": "#/definitions/disburse"
          }
        }
      }
    },
    "depositRequest": {
      "required": [
        "merchantId",
        "providerId",
        "callbackUrl",
        "receiver",
        "currency",
        "amount"
      ],
      "properties": {
        "merchantId": {
          "type": "string",
          "minLength": 1,
          "maxLength": 200,
          "description": "Merchant Name"
        },
        "amount": {
          "type": "string",
          "minLength": 1,
          "description": "deposit amount"
        },
        "currency": {
          "type": "string",
          "description": "currency Name"
        },
        "message": {
          "type": "string",
          "minLength": 1,
          "maxLength": 200,
          "description": "deposit message"
        },
        "transactionReferenceId": {
          "type": "string",
          "description": "deposit transaction reference id"
        },
        "providerId": {
          "type": "string",
          "description": "providerId"
        },
        "callbackUrl": {
          "type": "string",
          "description": "callbackUrl"
        },
        "receiver": {
          "description": "user id where we need to deposit money",
          "type": "string"
        },
        "receiverType": {
          "description": "type of user id ",
          "type": "string",
          "enum": [
            "PHONE",
            "EMAIL",
            "ID"
          ]
        }
      }
    },
    "getDepositStatusRequest": {
      "required": [
        "merchantId",
        "providerId",
        "transactionReferenceId"
      ],
      "properties": {
        "merchantId": {
          "type": "string",
          "minLength": 1,
          "maxLength": 200,
          "description": "Merchant Name"
        },
        "providerId": {
          "type": "string",
          "minLength": 1,
          "description": "providerId"
        },
        "transactionReferenceId": {
          "type": "string",
          "description": "deposit transaction reference id"
        }
      }
    },
    "ErrorResponse": {
      "properties": {
        "success": {
          "type": "number"
        }
      }
    },
    "disburse": {
      "required": [
        "receiver",
        "currency",
        "amount"
      ],
      "properties": {
        "amount": {
          "type": "string",
          "minLength": 1,
          "description": " transfer amount"
        },
        "currency": {
          "type": "string",
          "description": "currency Name"
        },
        "message": {
          "type": "string",
          "minLength": 1,
          "maxLength": 200,
          "description": "transfer message"
        },
        "receiver": {
          "description": "receiver user Id",
          "type": "string"
        },
        "receiverType": {
          "description": "type of user id ",
          "type": "string",
          "enum": [
            "PHONE",
            "EMAIL",
            "ID"
          ]
        }
      }
    }
  }
}
